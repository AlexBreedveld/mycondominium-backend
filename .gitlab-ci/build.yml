stages:
  - build

variables:
  # Enable colored output from Cargo.
  CARGO_TERM_COLOR: always
  # Disable TLS certificate directory for Docker-in-Docker (if needed).
  DOCKER_HOST: tcp://docker:2375/
  # use for much faster builds
  DOCKER_DRIVER: overlay2
  # ensure cross knows it's running remotely
  CROSS_REMOTE: 1
  DOCKER_TLS_CERTDIR: ""

# This job uses a matrix to build for multiple targets.
build:
  stage: build
  tags:
    - dind
  image: registry.git.al3xdev.com:443/alex/rust-cross/rust-cross:latest
  services:
    - docker:dind
  variables:
    # Enable colored output from Cargo.
    CARGO_TERM_COLOR: always
    # Disable TLS certificate directory for Docker-in-Docker (if needed).
    DOCKER_HOST: tcp://docker:2375/
    # use for much faster builds
    DOCKER_DRIVER: overlay2
    # ensure cross knows it's running remotely
    CROSS_REMOTE: 1
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - rustup target add ${TARGET} || true
  script:
    - echo "Building for ${NAME} (${TARGET})..."
    - ${COMMAND} build --verbose --locked --release --target ${TARGET}
  artifacts:
    # Artifacts: any binary output in the target/{target}/release folder.
    paths:
      - target/${TARGET}/release/
    expire_in: 1 week
  parallel:
    matrix:
      - NAME: "linux"
        TARGET: "x86_64-unknown-linux-musl"
        COMMAND: "cross"
      - NAME: "windows"
        TARGET: "x86_64-pc-windows-gnu"
        COMMAND: "cross"
      #- NAME: "macos"
      #  TARGET: "x86_64-apple-darwin"
      #  COMMAND: "cross"