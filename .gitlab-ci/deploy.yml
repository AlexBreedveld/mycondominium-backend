stages:
  - deploy

deploy_dev:
  stage: deploy
  image: debian:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  variables:
    CODER_URL: "https://coder.al3xdev.net"
    CODER_SESSION_TOKEN: $CODER_TOKEN
  #needs:
  #  job: build
  #  artifacts: true
  before_script:
    - apt-get update && apt-get install -y curl sudo openssh-client openssl
    - curl -fsSL https://coder.al3xdev.net/install.sh | sh
  script:
    - mkdir -p ~/.ssh
    - coder login
    - coder start -y mycondominium-backend-runner || true
    - coder config-ssh -y
    - ssh coder.mycondominium-backend-runner.main 'sudo apt-get update && sudo apt-get install -y curl wget postgresql openssl'
    - >
      ssh coder.mycondominium-backend-runner.main -t "
      sudo systemctl start postgresql &&
      sudo -u postgres psql -c \"ALTER USER postgres WITH PASSWORD 'toor';\" &&
      sudo -u postgres psql -U postgres -c \"SELECT 1 FROM pg_database WHERE datname = '${DEV_DB_NAME}';\" | grep -q 1 &&
      sudo -u postgres dropdb ${DEV_DB_NAME}" || true
    - ssh coder.mycondominium-backend-runner.main -t "sudo -u postgres createdb ${DEV_DB_NAME}"
    - ssh coder.mycondominium-backend-runner.main -t "sudo su coder -c \"mkdir -p ~/dev_deployment\""
    - ssh coder.mycondominium-backend-runner.main -t "sudo su coder -c \"if [ -f ~/dev_deployment/.env ]; then rm ~/dev_deployment/.env; fi\""
    - ssh coder.mycondominium-backend-runner.main -t "sudo su coder -c \"if [ -f ~/dev_deployment/mycondominium-backend ]; then rm ~/dev_deployment/mycondominium-backend; fi\""
    - ssh coder.mycondominium-backend-runner.main -t "sudo su coder -c \"wget -O ~/dev_deployment/mycondominium-backend 'https://git.al3xdev.com/puc/software-engineering-v/mycondominium-backend/-/releases/permalink/latest/downloads/target/x86_64-unknown-linux-gnu/release/mycondominium-backend'\""
    - ssh coder.mycondominium-backend-runner.main -t "sudo su coder -c \"chmod +x ~/dev_deployment/mycondominium-backend\""
    - ssh coder.mycondominium-backend-runner.main -t "if [ -f /etc/systemd/system/mycondominium-backend-dev.service ]; then sudo rm /etc/systemd/system/mycondominium-backend-dev.service; fi"
    - ssh coder.mycondominium-backend-runner.main -t "sudo wget -O /etc/systemd/system/mycondominium-backend-dev.service '${DEV_SYSTEMD_SERVICE_URL}'"
    - |
      echo -e "
      DATABASE_URL=postgres://postgres:toor@127.0.0.1/${DEV_DB_NAME}
      MINIO_URL=\"\"
      MINIO_BUCKET_NAME=\"\"
      MINIO_ACCESS_KEY=\"\"
      MINIO_SECRET_KEY=\"\"
      SERVER_HOST=\"127.0.0.1\"
      SERVER_PORT=\"3031\"
      AUTH_TOKEN_EXPIRATION_DAYS=30
      AUTH_TOKEN_SECRET_KEY=$(openssl rand -hex 32)" > ./.dev-env
    - scp ./.dev-env coder.mycondominium-backend-runner.main:/tmp/.mycondominium-dev-env
    - ssh coder.mycondominium-backend-runner.main -t "sudo mv /tmp/.mycondominium-dev-env /home/coder/dev_deployment/.env && sudo chown coder:coder /home/coder/dev_deployment/.env"
    - ssh coder.mycondominium-backend-runner.main -t "sudo systemctl daemon-reload"
    - ssh coder.mycondominium-backend-runner.main -t "sudo systemctl restart mycondominium-backend-dev.service"
  environment:
    name: Development
    on_stop: stop_dev

stop_dev:
  stage: deploy
  image: debian:latest
  variables:
    CODER_URL: "https://coder.al3xdev.net"
    CODER_SESSION_TOKEN: $CODER_TOKEN
  before_script:
    - apt-get update && apt-get install -y curl sudo openssh-client openssl
    - curl -fsSL https://coder.al3xdev.net/install.sh | sh
  script:
    - mkdir -p ~/.ssh
    - coder login
    - coder stop -y mycondominium-backend-runner || true
  environment:
    name: Development
    action: stop
  when: manual