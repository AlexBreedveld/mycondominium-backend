stages:
  - deploy

deploy_dev:
  stage: deploy
  image: debian:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  variables:
    CODER_URL: "https://coder.al3xdev.net"
    CODER_SESSION_TOKEN: $CODER_TOKEN
    DATABASE_USER: "postgres"
    DATABASE_PASSWORD: "toor"
    DATABASE_NAME: $DEV_DB_NAME
    RABBITMQ_USER: $RABBITMQ_USER
    RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD
    SMTP_HOST: $SMTP_HOST
    SMTP_PASSWORD: $SMTP_PASSWORD
    SMTP_PORT: $SMTP_PORT
    SMTP_USER: $SMTP_USER
    SERVER_PORT: "3030"
    AUTH_TOKEN_EXPIRATION_DAYS: "30"
    AUTH_TOKEN_SECRET_KEY: $DEF_AUTH_TOKEN_SECRET_KEY
    SAMPLE_CONFIG_PATH: "./.dev-config.yaml"
    OUTPUT_CONFIG_PATH: "./config.yaml"
  needs:
    - job: release_nightly
      artifacts: true
      optional: true
  before_script:
    - apt-get update && apt-get install -y curl sudo openssh-client openssl wget jq
    - curl -fsSL https://coder.al3xdev.net/install.sh | sh
  script:
    - mkdir -p ~/.ssh
    - coder login
    - coder start -y ${CODER_WORKSPACE_DEV} || true
    - coder config-ssh -y
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo grep -q '^coder:' /etc/passwd && echo \"User 'coder' exists\" || sudo useradd -m -U -s /bin/bash coder"
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t 'sudo apt-get update && sudo apt-get install -y curl wget postgresql openssl jq gnupg apt-transport-https'
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "curl -s 'https://git.al3xdev.com/puc/software-engineering-v/mycondominium-backend/-/snippets/21/raw/main/rabbitmq_installation.sh' | sudo bash"
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo rabbitmqctl add_user ${RABBITMQ_USER} ${RABBITMQ_PASSWORD} && sudo rabbitmqctl set_user_tags ${RABBITMQ_USER} administrator && sudo rabbitmqctl set_permissions -p / ${RABBITMQ_USER} '.*' '.*' '.*' && sudo rabbitmq-plugins enable rabbitmq_management" || true
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "if [ -f /etc/systemd/system/mycondominium-backend-dev.service ]; then sudo rm /etc/systemd/system/mycondominium-backend-dev.service; fi"
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo wget -O /etc/systemd/system/mycondominium-backend-dev.service '${DEV_SYSTEMD_SERVICE_URL}'"
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo systemctl daemon-reload"
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo systemctl stop mycondominium-backend-dev.service"
    - >
      ssh coder.${CODER_WORKSPACE_DEV}.main -t "
      sudo systemctl start postgresql &&
      sudo -u postgres psql -c \"ALTER USER postgres WITH PASSWORD 'toor';\"" || true
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo -u postgres dropdb ${DEV_DB_NAME}" || true
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo -u postgres createdb ${DEV_DB_NAME}" || true
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo su coder -c \"mkdir -p ~/dev_deployment\""
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo su coder -c \"if [ -f ~/dev_deployment/.env ]; then rm ~/dev_deployment/.env; fi\""
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo su coder -c \"if [ -f ~/dev_deployment/mycondominium-backend ]; then rm ~/dev_deployment/mycondominium-backend; fi\""
    - export BIN_URL=$(curl -X GET https://git.al3xdev.com/api/v4/projects/187/releases | jq 'map(select(.tag_name? | contains("nightly"))) | first' | jq -r '.assets.links[] | select(.name? | contains("linux-gnu-amd64")) | .direct_asset_url')
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo su coder -c \"wget -O ~/dev_deployment/mycondominium-backend '${BIN_URL}'\""
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo su coder -c \"chmod +x ~/dev_deployment/mycondominium-backend\""
    - wget 'https://git.al3xdev.com/puc/software-engineering-v/mycondominium-backend/-/raw/dev/res/config_template.yaml?ref_type=heads' -O "${SAMPLE_CONFIG_PATH}"
    - |
      sed -e "s/<DATABASE_PASSWORD>/${DATABASE_PASSWORD}/" \
      -e "s/<DATABASE_NAME>/${DATABASE_NAME}/" \
      -e "s/<DATABASE_USER>/${DATABASE_USER}/" \
      -e "s/<SMTP_HOST>/${SMTP_HOST}/" \
      -e "s/<SMTP_PORT>/${SMTP_PORT}/" \
      -e "s/<SMTP_USERNAME>/${SMTP_USER}/" \
      -e "s/<SMTP_PASSWORD>/${SMTP_PASSWORD}/" \
      -e "s/<SMTP_FROM>/${SMTP_USER}/" \
      -e "s/<SMTP_SECURITY>/SSL/" \
      -e "s/<RABBITMQ_HOST>/127.0.0.1/" \
      -e "s/<RABBITMQ_PORT>/5672/" \
      -e "s/<RABBITMQ_USERNAME>/${RABBITMQ_USER}/" \
      -e "s/<RABBITMQ_PASSWORD>/${RABBITMQ_PASSWORD}/" \
      -e "s/<SERVER_PORT>/${SERVER_PORT}/" \
      -e "s/<AUTH_TOKEN_EXPIRATION_DAYS>/${AUTH_TOKEN_EXPIRATION_DAYS}/" \
      -e "s/<AUTH_TOKEN_SECRET_KEY>/${AUTH_TOKEN_SECRET_KEY}/" \
      "${SAMPLE_CONFIG_PATH}" > "${OUTPUT_CONFIG_PATH}"
    - scp ${OUTPUT_CONFIG_PATH} coder.${CODER_WORKSPACE_DEV}.main:/tmp/dev-config.yaml
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo mv /tmp/dev-config.yaml /home/coder/dev_deployment/config.yaml && sudo chown coder:coder /home/coder/dev_deployment/config.yaml"
    - ssh coder.${CODER_WORKSPACE_DEV}.main -t "sudo systemctl restart mycondominium-backend-dev.service"
  environment:
    name: Development
    on_stop: stop_dev

stop_dev:
  stage: deploy
  image: debian:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  variables:
    CODER_URL: "https://coder.al3xdev.net"
    CODER_SESSION_TOKEN: $CODER_TOKEN
  before_script:
    - apt-get update && apt-get install -y curl sudo openssh-client openssl
    - curl -fsSL https://coder.al3xdev.net/install.sh | sh
  script:
    - mkdir -p ~/.ssh
    - coder login
    - coder stop -y ${CODER_WORKSPACE_DEV} || true
  environment:
    name: Development
    action: stop
  when: manual

deploy_main:
  stage: deploy
  image: debian:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  variables:
    CODER_URL: "https://coder.al3xdev.net"
    CODER_SESSION_TOKEN: $CODER_TOKEN
    DATABASE_USER: "postgres"
    DATABASE_PASSWORD: "toor"
    DATABASE_NAME: $MAIN_DB_NAME
    RABBITMQ_USER: $RABBITMQ_USER
    RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD
    SMTP_HOST: $SMTP_HOST
    SMTP_PASSWORD: $SMTP_PASSWORD
    SMTP_PORT: $SMTP_PORT
    SMTP_USER: $SMTP_USER
    SERVER_PORT: "3030"
    AUTH_TOKEN_EXPIRATION_DAYS: "30"
    AUTH_TOKEN_SECRET_KEY: $DEF_AUTH_TOKEN_SECRET_KEY
    SAMPLE_CONFIG_PATH: "./.main-config.yaml"
    OUTPUT_CONFIG_PATH: "./config.yaml"
  needs:
    - job: release_main
      artifacts: true
      optional: true
  before_script:
    - apt-get update && apt-get install -y curl sudo openssh-client openssl wget jq
    - curl -fsSL https://coder.al3xdev.net/install.sh | sh
  script:
    - mkdir -p ~/.ssh
    - coder login
    - coder start -y ${CODER_WORKSPACE_MAIN} || true
    - coder config-ssh -y
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo grep -q '^coder:' /etc/passwd && echo \"User 'coder' exists\" || sudo useradd -m -U -s /bin/bash coder"
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t 'sudo apt-get update && sudo apt-get install -y curl wget postgresql openssl jq gnupg apt-transport-https'
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "curl -s 'https://git.al3xdev.com/puc/software-engineering-v/mycondominium-backend/-/snippets/21/raw/main/rabbitmq_installation.sh' | sudo bash"
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo rabbitmqctl add_user ${RABBITMQ_USER} ${RABBITMQ_PASSWORD} && sudo rabbitmqctl set_user_tags ${RABBITMQ_USER} administrator && sudo rabbitmqctl set_permissions -p / ${RABBITMQ_USER} '.*' '.*' '.*' && sudo rabbitmq-plugins enable rabbitmq_management" || true
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "if [ -f /etc/systemd/system/mycondominium-backend-main.service ]; then sudo rm /etc/systemd/system/mycondominium-backend-main.service; fi"
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo wget -O /etc/systemd/system/mycondominium-backend-main.service '${MAIN_SYSTEMD_SERVICE_URL}'"
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo systemctl daemon-reload"
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo systemctl stop mycondominium-backend-main.service"
    - >
      ssh coder.${CODER_WORKSPACE_MAIN}.main -t "
      sudo systemctl start postgresql &&
      sudo -u postgres psql -c \"ALTER USER postgres WITH PASSWORD 'toor';\"" || true
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo -u postgres dropdb ${MAIN_DB_NAME}" || true
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo -u postgres createdb ${MAIN_DB_NAME}" || true
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo su coder -c \"mkdir -p ~/main_deployment\""
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo su coder -c \"if [ -f ~/main_deployment/.env ]; then rm ~/main_deployment/.env; fi\""
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo su coder -c \"if [ -f ~/main_deployment/mycondominium-backend ]; then rm ~/main_deployment/mycondominium-backend; fi\""
    - export BIN_URL=$(curl -X GET https://git.al3xdev.com/api/v4/projects/187/releases | jq 'map(select(.tag_name? | contains("mainline"))) | first' | jq -r '.assets.links[] | select(.name? | contains("linux-gnu-amd64")) | .direct_asset_url')
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo su coder -c \"wget -O ~/main_deployment/mycondominium-backend '${BIN_URL}'\""
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo su coder -c \"chmod +x ~/main_deployment/mycondominium-backend\""
    - wget 'https://git.al3xdev.com/puc/software-engineering-v/mycondominium-backend/-/raw/main/res/config_template.yaml?ref_type=heads' -O "${SAMPLE_CONFIG_PATH}"
    - |
      sed -e "s/<DATABASE_PASSWORD>/${DATABASE_PASSWORD}/" \
      -e "s/<DATABASE_NAME>/${DATABASE_NAME}/" \
      -e "s/<DATABASE_USER>/${DATABASE_USER}/" \
      -e "s/<SMTP_HOST>/${SMTP_HOST}/" \
      -e "s/<SMTP_PORT>/${SMTP_PORT}/" \
      -e "s/<SMTP_USERNAME>/${SMTP_USER}/" \
      -e "s/<SMTP_PASSWORD>/${SMTP_PASSWORD}/" \
      -e "s/<SMTP_FROM>/${SMTP_USER}/" \
      -e "s/<SMTP_SECURITY>/SSL/" \
      -e "s/<RABBITMQ_HOST>/127.0.0.1/" \
      -e "s/<RABBITMQ_PORT>/5672/" \
      -e "s/<RABBITMQ_USERNAME>/${RABBITMQ_USER}/" \
      -e "s/<RABBITMQ_PASSWORD>/${RABBITMQ_PASSWORD}/" \
      -e "s/<SERVER_PORT>/${SERVER_PORT}/" \
      -e "s/<AUTH_TOKEN_EXPIRATION_DAYS>/${AUTH_TOKEN_EXPIRATION_DAYS}/" \
      -e "s/<AUTH_TOKEN_SECRET_KEY>/${AUTH_TOKEN_SECRET_KEY}/" \
      "${SAMPLE_CONFIG_PATH}" > "${OUTPUT_CONFIG_PATH}"
    - scp ${OUTPUT_CONFIG_PATH} coder.${CODER_WORKSPACE_MAIN}.main:/tmp/.main-config.yaml
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo mv /tmp/.main-config.yaml /home/coder/main_deployment/config.yaml && sudo chown coder:coder /home/coder/main_deployment/config.yaml"
    - ssh coder.${CODER_WORKSPACE_MAIN}.main -t "sudo systemctl restart mycondominium-backend-main.service"
  environment:
    name: Mainline
    on_stop: stop_main

stop_main:
  stage: deploy
  image: debian:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  variables:
    CODER_URL: "https://coder.al3xdev.net"
    CODER_SESSION_TOKEN: $CODER_TOKEN
  before_script:
    - apt-get update && apt-get install -y curl sudo openssh-client openssl
    - curl -fsSL https://coder.al3xdev.net/install.sh | sh
  script:
    - mkdir -p ~/.ssh
    - coder login
    - coder stop -y ${CODER_WORKSPACE_MAIN} || true
  environment:
    name: Mainline
    action: stop
  when: manual