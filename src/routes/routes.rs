use actix_web::web;

pub fn admin_route() -> actix_web::Scope {
    web::scope("/api/admin")
        .route(
            "/list",
            web::get().to(crate::services::admin_service::get_admin::get_admins),
        )
        .route(
            "/get/{id}",
            web::get().to(crate::services::admin_service::get_admin::get_admin_by_id),
        )
        .route(
            "/new",
            web::post().to(crate::services::admin_service::upsert_admin::new_admin),
        )
        .route(
            "/update/{id}",
            web::put().to(crate::services::admin_service::upsert_admin::update_admin),
        )
        .route(
            "/delete/{id}",
            web::delete().to(crate::services::admin_service::upsert_admin::delete_admin),
        )
}

pub fn auth_route() -> actix_web::Scope {
    web::scope("/api/auth")
        .route(
            "/signin",
            web::post().to(crate::services::auth_service::sign_in::sign_in),
        )
        .route(
            "/auth",
            web::get().to(crate::services::auth_service::auth::auth),
        )
}

pub fn community_route() -> actix_web::Scope {
    web::scope("/api/community")
        .route(
            "/list",
            web::get().to(crate::services::community_service::get_community::get_communities),
        )
        .route(
            "/get/{id}",
            web::get().to(crate::services::community_service::get_community::get_community_by_id),
        )
        .route(
            "/new",
            web::post().to(crate::services::community_service::upsert_community::new_community),
        )
        .route(
            "/update/{id}",
            web::put().to(crate::services::community_service::upsert_community::update_community),
        )
        .route(
            "/delete/{id}",
            web::delete()
                .to(crate::services::community_service::upsert_community::delete_community),
        )
}

pub fn maintenance_schedule_route() -> actix_web::Scope {
    web::scope("/api/maintenance_schedule")
        .route(
            "/list",
            web::get().to(crate::services::maintenance_schedule_service::get_maintenance_schedule::get_maintenance_schedules),
        )
        .route(
            "/count/{status}",
            web::get().to(crate::services::maintenance_schedule_service::get_maintenance_schedule::count_maintenance_schedule),
        )
        .route(
            "/get/{id}",
            web::get().to(crate::services::maintenance_schedule_service::get_maintenance_schedule::get_maintenance_schedule_by_id),
        )
        .route(
            "/new",
            web::post().to(crate::services::maintenance_schedule_service::upsert_maintenance_schedule::new_maintenance_schedule),
        )
        .route(
            "/update/{id}",
            web::put().to(crate::services::maintenance_schedule_service::upsert_maintenance_schedule::update_maintenance_schedule),
        )
        .route(
            "/delete/{id}",
            web::delete().to(crate::services::maintenance_schedule_service::upsert_maintenance_schedule::delete_maintenance_schedule),
        )
}

pub fn parcel_route() -> actix_web::Scope {
    web::scope("/api/parcel")
        .route(
            "/list",
            web::get().to(crate::services::parcel_service::get_parcel::get_parcels),
        )
        .route(
            "/get/{id}",
            web::get().to(crate::services::parcel_service::get_parcel::get_parcel_by_id),
        )
        .route(
            "/new",
            web::post().to(crate::services::parcel_service::upsert_parcel::new_parcel),
        )
        .route(
            "/update/{id}",
            web::put().to(crate::services::parcel_service::upsert_parcel::update_parcel),
        )
        .route(
            "/delete/{id}",
            web::delete().to(crate::services::parcel_service::upsert_parcel::delete_parcel),
        )
}

pub fn resident_route() -> actix_web::Scope {
    web::scope("/api/resident")
        .route(
            "/list",
            web::get().to(crate::services::resident_service::get_resident::get_residents),
        )
        .route(
            "/count",
            web::get().to(crate::services::resident_service::get_resident::count_resident),
        )
        .route(
            "/get/{id}",
            web::get().to(crate::services::resident_service::get_resident::get_resident_by_id),
        )
        .route(
            "/new",
            web::post().to(crate::services::resident_service::upsert_resident::new_resident),
        )
        .route(
            "/update/{id}",
            web::put().to(crate::services::resident_service::upsert_resident::update_resident),
        )
        .route(
            "/delete/{id}",
            web::delete().to(crate::services::resident_service::upsert_resident::delete_resident),
        )
        .route(
            "/invite/new",
            web::post().to(crate::services::resident_service::invite_resident::new_resident_invite),
        )
}

pub fn vehicle_route() -> actix_web::Scope {
    web::scope("/api/vehicle")
        .route(
            "/list",
            web::get().to(crate::services::vehicle_service::get_vehicle::get_vehicles),
        )
        .route(
            "/get/{id}",
            web::get().to(crate::services::vehicle_service::get_vehicle::get_vehicle_by_id),
        )
        .route(
            "/new",
            web::post().to(crate::services::vehicle_service::upsert_vehicle::new_vehicle),
        )
        .route(
            "/update/{id}",
            web::put().to(crate::services::vehicle_service::upsert_vehicle::update_vehicle),
        )
        .route(
            "/delete/{id}",
            web::delete().to(crate::services::vehicle_service::upsert_vehicle::delete_vehicle),
        )
}
