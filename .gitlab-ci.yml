image: rust:latest

stages:
  - test
  - docs
  - build
  - release
  - deploy

include:
  - local: .gitlab-ci/.gitlab-ci.build.yml
  - local: .gitlab-ci/.gitlab-ci.release.yml
  - local: .gitlab-ci/.gitlab-ci.deploy.yml

tests:
  stage: test
  variables:
    CODER_URL: "https://coder.al3xdev.net"
    CODER_SESSION_TOKEN: $CODER_TOKEN
    DATABASE_USER: "postgres"
    DATABASE_PASSWORD: "toor"
    DATABASE_NAME: $DEV_DB_NAME
    RABBITMQ_USER: $RABBITMQ_USER
    RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD
    SMTP_HOST: $SMTP_HOST
    SMTP_PASSWORD: $SMTP_PASSWORD
    SMTP_PORT: $SMTP_PORT
    SMTP_USER: $SMTP_USER
    SERVER_PORT: "3030"
    AUTH_TOKEN_EXPIRATION_DAYS: "30"
    AUTH_TOKEN_SECRET_KEY: $DEF_AUTH_TOKEN_SECRET_KEY
    SAMPLE_CONFIG_PATH: "./.dev-config.yaml"
    OUTPUT_CONFIG_PATH: "./config.yaml"
  rules:
    - if: $SKIP_BUILD == "true"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: always
  before_script:
    - apt update && apt install -y jq postgresql sudo
    - sudo -u postgres /usr/lib/postgresql/15/bin/postgres -D /var/lib/postgresql/15/main -c config_file=/etc/postgresql/15/main/postgresql.conf &
  script:
    - sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD 'toor';" || true
    - sudo -u postgres dropdb ${DEV_DB_NAME} || true
    - sudo -u postgres createdb ${DEV_DB_NAME} || true
    - wget 'https://git.al3xdev.com/puc/software-engineering-v/mycondominium-backend/-/raw/dev/res/config_template.yaml?ref_type=heads' -O "${SAMPLE_CONFIG_PATH}"
    - |
      sed -e "s/<DATABASE_PASSWORD>/${DATABASE_PASSWORD}/" \
      -e "s/<DATABASE_NAME>/${DATABASE_NAME}/" \
      -e "s/<DATABASE_USER>/${DATABASE_USER}/" \
      -e "s/<SMTP_HOST>/${SMTP_HOST}/" \
      -e "s/<SMTP_PORT>/${SMTP_PORT}/" \
      -e "s/<SMTP_USERNAME>/${SMTP_USER}/" \
      -e "s/<SMTP_PASSWORD>/${SMTP_PASSWORD}/" \
      -e "s/<SMTP_FROM>/${SMTP_USER}/" \
      -e "s/<RABBITMQ_HOST>/127.0.0.1/" \
      -e "s/<RABBITMQ_PORT>/5672/" \
      -e "s/<RABBITMQ_USERNAME>/${RABBITMQ_USER}/" \
      -e "s/<RABBITMQ_PASSWORD>/${RABBITMQ_PASSWORD}/" \
      -e "s/<BASE_URL>/https:\/\/3000--main--mycondominium-backend-runner-dev--alex.coder.al3xdev.net/" \
      -e "s/<SERVER_PORT>/${SERVER_PORT}/" \
      -e "s/<AUTH_TOKEN_EXPIRATION_DAYS>/${AUTH_TOKEN_EXPIRATION_DAYS}/" \
      -e "s/<AUTH_TOKEN_SECRET_KEY>/${AUTH_TOKEN_SECRET_KEY}/" \
      "${SAMPLE_CONFIG_PATH}" > "${OUTPUT_CONFIG_PATH}"
    - echo "Checking if pipeline for this branch has already ran"
    - curl -s -X GET https://git.al3xdev.com/api/v4/projects/187/releases | jq --arg target_commit "${CI_COMMIT_SHA}" 'any(.[]; .commit.id == $target_commit)' > .pipeline_re_run_status
    - if [ $(cat ./.pipeline_re_run_status) == "true" ]; then echo "Skipping because this is a re-run"; exit 0; fi
    - if [ ${SKIP_BUILD} == "true" ]; then echo "Skipping because of SKIP_BUILD set to true"; exit 0; fi
    - cargo test --verbose
  artifacts:
    paths:
      - .pipeline_re_run_status

# Build Page stage: Generate documentation
doc-rustdoc:
  stage: docs
  dependencies:
    - tests
  needs:
    job: tests
    artifacts: true
  script:
    - if [ $(cat ./.pipeline_re_run_status) == "true" ]; then echo "Skipping because this is a re-run"; exit 0; fi
    - if [ ${SKIP_BUILD} == "true" ]; then echo "Skipping because of SKIP_BUILD set to true"; exit 0; fi
    - cargo doc --no-deps
    - mkdir swagger
    - cargo run -- generate-swagger > ./swagger/openapi.json
  artifacts:
    paths:
      - target/doc
      - swagger
      - .pipeline_re_run_status
    expire_in: 1 hour
  only:
    - main

# Deploy stage: Publish docs to GitLab Pages
pages:
  image: alpine:latest
  stage: deploy
  needs:
    - job: pages-swagger
      artifacts: true
    - job: doc-rustdoc
      artifacts: false
  script:
    - if [ $(cat ./.pipeline_re_run_status) == "true" ]; then echo "Skipping because this is a re-run"; exit 0; fi
    - if [ ${SKIP_BUILD} == "true" ]; then echo "Skipping because of SKIP_BUILD set to true"; exit 0; fi
    - mkdir public
    - mkdir public/rustdoc
    - mkdir public/swagger
    - cp -r target/doc/* public/rustdoc/
    - mv ./public-swagger/* public/swagger/
  artifacts:
    paths:
      - public
  only:
    - main

pages-swagger:
  image: node:latest
  stage: docs
  needs:
    - job: doc-rustdoc
      artifacts: true
  script:
    - if [ $(cat ./.pipeline_re_run_status) == "true" ]; then echo "Skipping because this is a re-run"; exit 0; fi
    - if [ ${SKIP_BUILD} == "true" ]; then echo "Skipping because of SKIP_BUILD set to true"; exit 0; fi
    - mkdir public-swagger
    - npx @redocly/cli build-docs -o public-swagger/index.html swagger/openapi.json
  artifacts:
    paths:
      - public-swagger
      - target
      - .pipeline_re_run_status
  only:
    - main